@{
    Layout = null; // Örnek olarak layout kullanılmadı
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Trendyol Asistan</title>
    <style>
        /* ========== CSS ========== */
        .chat-toggle-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #ff7f00; /* Trendyol turuncusu */
            color: #fff;
            border: none;
            border-radius: 30px;
            padding: 10px 20px;
            cursor: pointer;
            font-size: 14px;
            box-shadow: 0 2px 6px rgba(0,0,0,0.2);
            z-index: 9999; /* Üstte görünsün */
        }

        .chat-box {
            position: fixed;
            bottom: 70px;
            right: 20px;
            width: 300px;
            height: 400px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 6px;
            display: flex;
            flex-direction: column;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
            z-index: 9999;
        }

        .hidden {
            display: none; /* Açık/Kapalı kontrol */
        }

        .chat-header {
            background-color: #ff7f00;
            color: #fff;
            padding: 10px;
            border-top-left-radius: 6px;
            border-top-right-radius: 6px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

            .chat-header h5 {
                margin: 0;
                font-size: 16px;
            }

        .close-btn {
            background: none;
            border: none;
            color: #fff;
            font-size: 24px;
            cursor: pointer;
        }

        .chat-messages {
            flex: 1;
            padding: 10px;
            overflow-y: auto;
            background-color: #fafafa;
            display: flex;
            flex-direction: column; /* Mesajlar alt alta */
        }

        .chat-input {
            display: flex;
            border-top: 1px solid #ccc;
        }

        #chat-input-field {
            flex: 1;
            padding: 10px;
            border: none;
            outline: none;
        }

        #chat-send-btn {
            background-color: #ff7f00;
            color: #fff;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
        }

        /* Mesaj baloncukları */
        .chat-message {
            margin-bottom: 10px;
            padding: 8px 12px;
            border-radius: 12px;
            display: inline-block;
            max-width: 80%;
            line-height: 1.4;
            word-wrap: break-word;
        }

        .user-message {
            background-color: #ff7f00;
            color: #fff;
            align-self: flex-end;
            margin-left: auto;
        }

        .bot-message {
            background-color: #eaeaea;
            color: #333;
            align-self: flex-start;
        }
    </style>
</head>
<body>

    <!-- Sohbet butonu -->
    <button id="chat-toggle" class="chat-toggle-btn">
        Asistan
    </button>

    <!-- Sohbet Kutusu -->
    <div id="chat-box" class="chat-box hidden">
        <div class="chat-header">
            <h5>Nano Asistan</h5>
            <button id="chat-close" class="close-btn">&times;</button>
        </div>
        <div class="chat-messages" id="chat-messages">
            <!-- Mesajlar JS ile eklenecek -->
        </div>
        <div class="chat-input">
            <input type="text" id="chat-input-field" placeholder="Mesajınızı yazın..." />
            <button id="chat-send-btn">Gönder</button>
        </div>
    </div>

    <!-- JS Kodları -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const chatToggleBtn = document.getElementById('chat-toggle');
            const chatBox = document.getElementById('chat-box');
            const chatCloseBtn = document.getElementById('chat-close');
            const chatSendBtn = document.getElementById('chat-send-btn');
            const chatMessages = document.getElementById('chat-messages');
            const chatInputField = document.getElementById('chat-input-field');

            // Sohbeti aç/kapa
            chatToggleBtn.addEventListener('click', function () {
                chatBox.classList.toggle('hidden');
            });

            // Kapama butonu
            chatCloseBtn.addEventListener('click', function () {
                chatBox.classList.add('hidden');
            });

            // Mesaj gönderme (Buton veya Enter)
            function sendMessage() {
                const messageText = chatInputField.value.trim();
                if (!messageText) return;

                // Ekrana kullanıcı mesajını ekle
                appendMessage(messageText, 'user');
                chatInputField.value = '';

                // Sunucuya (ChatController) post isteği at
                fetch('/api/chat/SendMessage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ message: messageText })
                })
                    .then(response => response.json())
                    .then(data => {
                        /*
                          ChatGPT API'sinin gönderdiği JSON yapısı genellikle:
                          {
                            "id": "...",
                            "object": "...",
                            "created": 123456789,
                            "choices": [
                              {
                                "message": {
                                  "role": "assistant",
                                  "content": "Burada yanıt var"
                                },
                                ...
                              }
                            ],
                            "usage": { ... }
                          }
                        */
                        const botResponse = data?.choices?.[0]?.message?.content;
                        if (botResponse) {
                            appendMessage(botResponse, 'bot');
                        } else {
                            appendMessage("Üzgünüm, bir yanıt alınamadı.", 'bot');
                        }
                    })
                    .catch(error => {
                        console.error('Hata:', error);
                        appendMessage("Üzgünüm, bir hata oluştu.", 'bot');
                    });
            }

            // Mesaj baloncuğunu ekrana ekleyen fonksiyon
            function appendMessage(text, sender) {
                const messageDiv = document.createElement('div');
                messageDiv.classList.add('chat-message');

                if (sender === 'user') {
                    messageDiv.classList.add('user-message');
                } else {
                    messageDiv.classList.add('bot-message');
                }

                messageDiv.textContent = text;
                chatMessages.appendChild(messageDiv);

                // Son mesaja otomatik kaydır
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }

            // Gönder butonu ve Enter tuşu
            chatSendBtn.addEventListener('click', sendMessage);
            chatInputField.addEventListener('keydown', function (e) {
                if (e.key === 'Enter') {
                    sendMessage();
                }
            });
        });
    </script>
</body>
</html>
